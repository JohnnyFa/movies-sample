// Mocks generated by Mockito 5.4.4 from annotations
// in movies_flutter_sample/test/feat/imdb/viewmodel/home_page_vm_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_flutter_sample/common/observer/event_observer.dart'
    as _i5;
import 'package:movies_flutter_sample/common/repo/dio_get_client.dart' as _i2;
import 'package:movies_flutter_sample/feat/imdb/repository/movies_api_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDioGetClient_0 extends _i1.SmartFake implements _i2.DioGetClient {
  _FakeDioGetClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TmdbApiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTmdbApiRepository extends _i1.Mock implements _i3.TmdbApiRepository {
  MockTmdbApiRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DioGetClient get getClient => (super.noSuchMethod(
        Invocation.getter(#getClient),
        returnValue: _FakeDioGetClient_0(
          this,
          Invocation.getter(#getClient),
        ),
      ) as _i2.DioGetClient);

  @override
  _i4.Future<dynamic> loadMovies({int? page = 1}) => (super.noSuchMethod(
        Invocation.method(
          #loadMovies,
          [],
          {#page: page},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [EventObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventObserver extends _i1.Mock implements _i5.EventObserver {
  MockEventObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void notify(
    String? key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #notify,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
